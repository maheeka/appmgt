<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include("/jagg/constants.jag");

var log = new Log();
var mod = jagg.module("application");

(function () {
    var action = request.getParameter("action");
    if (!jagg.getUser()) {
        print(UNAUTHORIZED_ERROR_RESPONSE);
        return;
    }
    if (action == "verifyCustomDomain") {
        var customUrl = request.getParameter("customUrl");
        //The url which is generated for application version
        var pointedUrl = request.getParameter("pointedUrl");
        try {
            var success = mod.verifyCustomUrl(pointedUrl, customUrl);

            if (!success) {
                domainNameNotExistResponse();
            } else {
                response.status = 200;
                response.content = "The custom domain is valid";
            }
        } catch (e) {
            var message = "Error while verifying custom url : " + customUrl;
            log.error(message);
            log.error(e);
            response.status = 500;
            response.content = message;
        }
    } else if (action == "updateCustomUrl") {
        var pointedUrl = request.getParameter("pointedUrl");
        var customUrl = request.getParameter("customUrl");
        var applicationName = request.getParameter("applicationName");

        try {
            var success = mod.verifyCustomUrl(pointedUrl, customUrl);
            if (!success) {
                domainNameNotExistResponse();
            } else {
                mod.addCustomDomain(applicationName, customUrl);
            }
        } catch (e) {
            var message = "Error while updating custom url : " + customUrl;
            log.error(message);
            log.error(e);
            response.status = 500;
            response.content = message;
        }
    } else if (action == "setDefaultVersion") {
        var applicationName = request.getParameter("applicationName");
        var defaultVersion = request.getParameter("versionName");
        var set = request.getParameter("set");
        try {
            mod.setDefaultVersion(applicationName, defaultVersion, set);
        } catch (e) {
            var message = "Error while setting default url to application : " + applicationName;
            log.error(message);
            log.error(e);
            response.status = 500;
            response.content = message;
        }
    } else {
        throw new Error("No action specified");
    }

    function domainNameNotExistResponse() {
        response.status = 400;
        response.content = "CNAME record does not exist for this config : \"" +
                customUrl + " CNAME " + pointedUrl + "\". Please publish a CNAME record first.";

    }
}());

%>

